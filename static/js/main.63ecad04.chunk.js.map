{"version":3,"sources":["redux/counterSlice.js","redux/TagSlice.js","redux/langSlice.js","redux/ReduxWrapper.js","Html.js","ImageUploader.js","SortableList.js","LangSwitch.js","languages.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increase","state","decrease","actions","TagSlice","updatetag","action","payload","langSlice","setEn","setRu","persistConfig","key","version","storage","combineReducers","counter","counterReducer","tag","TagReducer","lang","langReducer","persistedReducer","persistReducer","store_conf","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReduxWrapper","props","react_default","a","createElement","es","store","integration_react","loading","children","Html","_ref","_ref$tag","_ref$className","className","CustomTag","concat","dangerouslySetInnerHTML","__html","ImageUploader","_ref$name","handleImageChange","_useState","useState","myFile","_useState2","Object","slicedToArray","_useState3","_useState4","resizedImg","onChange","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","file","image","wrap","_context","prev","next","target","files","resizeFile","sent","stop","_x","apply","this","arguments","Promise","resolve","Resizer","imageFileResizer","uri","type","label","accept","e","src","alt","grid","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","SortableList","updateState","QuoteItem","styled","div","_templateObject","taggedTemplateLiteral","slides","length","Quote","slide","index","react_beautiful_dnd_esm","draggableId","id","provided","assign","ref","innerRef","draggableProps","dragHandleProps","imgurl","imagebase64","QuoteList","React","memo","_ref3","map","onDragEnd","destination","source","console","log","objectSpread","droppableId","direction","snapshot","droppableProps","style","isDraggingOver","background","display","padding","overflow","placeholder","Switcher","LangSwitch_templateObject","Button","_templateObject2","curlang","toUpperCase","LangName","_templateObject3","LangFlag","_templateObject4","LangSwitch","language","useSelector","dispatch","useDispatch","onClick","LANG","editMode","ru","en","developerMode","deleteThisSlide","addNewSlide","sorting","dragBlocks","saveSlider","saveSliderWithoutImages","sliderDefaultHeader","sliderDefaultText","sliderType","uploadBase64ApiUrl","saveSliderApiUrl","initSliderScriptUrl","sliderIframeUrl","previewUrlBase","initial","time","text","head","SliderApp","useCheckboxState","debugMode","imgUploadedNum","setImgUploadedNum","isUploading","setIsUploading","_useState5","_useState6","isSaving","setIsSaving","_useState7","_useState8","isCoping","setIsCoping","_useState9","_useState10","setState","_useState11","_useState12","finalSliderJSON","setFinalSliderJSON","_useState13","_useState14","setResultSliderId","_useState15","_useState16","previewUrl","setPreviewUrl","_useState17","_useState18","resultCode","setResultCode","_useState19","dots","draggable","arrows","infinite","speed","slidesToShow","slidesToScroll","_useState20","slickSettings","setSlickSettings","_useState21","_useState22","redrawCounter","setRedrawCounter","_useState23","_useState24","nav1","setNav1","_useState25","_useState26","nav2","setNav2","useEffect","slidesNoImgData","ob","imageurl","data","prevState","useUpdateEffect","uploadBase64","handleChange","el","handleChangeHead","details","sp","canvas","formBody","keys","encodeURIComponent","join","fetch","method","headers","Content-Type","body","then","res","ok","Error","status","json","imgname","imgfile","url","prevNum","catch","error","JSON","stringify","response","base64","href","rel","document","addEventListener","clipboardData","setData","preventDefault","execCommand","dist_web","react_slick_lib_default","asNavFor","slider1","Fragment","filter","slider2","react_textarea_autosize_browser_esm","src_Html","copy","toConsumableArray","shortid","generate","push","i","indexOf","alert","lib_default","rootElement","getElementById","ReactDOM","render","ReduxWrapper_ReduxWrapper"],"mappings":"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","file":"static/js/main.63ecad04.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increase: (state) => {\n      state.value += 1;\n    },\n    decrease: (state) => {\n      state.value -= 1;\n    },\n  },\n});\n// each case under reducers becomes an action\nexport const { increase, decrease } = counterSlice.actions;\nexport default counterSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const TagSlice = createSlice({\n  name: \"tag\",\n  initialState: {\n    value: \"\"\n  },\n  reducers: {\n    updatetag: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n});\n// each case under reducers becomes an action\nexport const { updatetag } = TagSlice.actions;\nexport default TagSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const langSlice = createSlice({\n  name: \"lang\",\n  initialState: {\n    value: \"ru\"\n  },\n  reducers: {\n    setEn: (state) => {\n      state.value = \"en\";\n    },\n    setRu: (state) => {\n      state.value = \"ru\";\n    }\n  }\n});\n// each case under reducers becomes an action\nexport const { setEn, setRu } = langSlice.actions;\nexport default langSlice.reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n//import rootReducer from './reducers';\nimport counterReducer from \"./counterSlice\";\nimport TagReducer from \"./TagSlice\";\nimport langReducer from \"./langSlice\";\n//import store from './store';\n\n//import App from './App';\n\n//add persist https://redux-toolkit.js.org/usage/usage-guide#use-with-redux-persist\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\n\nconst reducers = combineReducers({\n  counter: counterReducer,\n  //mdicts: dictsReducer,\n  tag: TagReducer,\n  lang: langReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n//const persistedReducer = persistReducer(persistConfig, counterReducer); //this line throws error, use combineReducers to fix and mix more reducers if needed\n\nconst store_conf = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    })\n});\n\nlet persistor = persistStore(store_conf);\n\nexport const ReduxWrapper = (props) => {\n  /*ReactDOM.render(\n  <Provider store={store_conf}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);*/\n\n  return (\n    <Provider store={store_conf}>\n      <PersistGate loading={null} persistor={persistor}>\n        {props.children}\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\n\nconst Html = ({ tag = \"div\", children, className = \"htmlcontainer\" }) => {\n  const CustomTag = `${tag}`;\n\n  return (\n    <CustomTag\n      className={className}\n      dangerouslySetInnerHTML={{ __html: children }}\n    />\n  );\n};\n\nexport default Html;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Resizer from \"react-image-file-resizer\";\n\nexport default function ImageUploader({\n  name = \"myFile\",\n  handleImageChange,\n  className = \"\"\n}) {\n  const apiUrl = \"https://api.nahab.info/api/canvas/upload.php\";\n  const [postImage, setPostImage] = useState({\n    myFile: \"\"\n  });\n  const [resizedImg, setResizedImg] = useState(null);\n\n  /*const convertToBase64 = (file) => {\n    console.log(\"type--\", file.type);\n    var type = file.type;\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = (e) => {\n        let res = fileReader.result;\n        //ResizeImage(res, type);\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };*/\n  /*const handleFileUpload = async (e) => {\n    console.log(\"e.target.name\", e.target);\n    console.log(\"e.target.name\", e.target.name);\n    const name = e.target.name;\n    const file = e.target.files[0];\n    console.log(\"handleImageChange\", handleImageChange);\n    const _handleImageChange = handleImageChange;\n    const base64 = await convertToBase64(file);\n    //const base64 = convertToBase64(file);\n    setPostImage({ ...postImage, myFile: base64 });\n    //console.log(\"e.target.name\", e.target);\n    console.log(\"name\", name);\n    //console.log(\"base64\", base64);\n    _handleImageChange(name, base64);\n\n    //handleImageChange(e.target, base64);\n  };*/\n\n  const onChange = async (event) => {\n    const name = event.target.name;\n    const file = event.target.files[0];\n    const image = await resizeFile(file);\n    //console.log(image);\n    handleImageChange(name, image);\n    //handleSubmitUrlencoded(image);\n  };\n\n  /*const handleSubmitUrlencoded = (image) => {\n    const details = {\n      sp: \"testslider\",\n      canvas: image\n    };\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key])\n      )\n      .join(\"&\");\n\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      body: formBody\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"data\", data);\n        console.log(data.result);\n        //setResultId(data.result);\n        //setThanxOpen(true);\n      }) // if correct: data {result: '0f03a3888b75dddf57259318c09b2d56', status: 200, error: false}\n      .catch((error) => {\n        console.log(\"catch\", error); // if wrong url in console we see: catch Error: 404      at eval (index.js:134)\n      });\n    //event.preventDefault();\n  };*/\n\n  const resizeFile = (file) =>\n    new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        file,\n        1200,\n        1200,\n        \"JPEG\",\n        100,\n        0,\n        (uri) => {\n          resolve(uri);\n        },\n        \"base64\"\n      );\n    });\n\n  return (\n    <div className={className}>\n      <form className=\"devutil\">\n        <input\n          className=\"devutil\"\n          type=\"file\"\n          label=\"Image\"\n          name={name}\n          accept=\".jpeg, .png, .jpg\"\n          //onChange={(e) => handleFileUpload(e)}\n          onChange={(e) => onChange(e)}\n        />\n      </form>\n      <img src={resizedImg} alt=\"\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\"; //\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"@emotion/styled\";\nconst grid = 8;\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport default function SortableList({\n  //initial = { time: 0, slides: [] },\n  updateState,\n  state\n}) {\n  const QuoteItem = styled.div`\n    width: ${100 / state.slides.length}%;\n    border: 1px solid grey;\n    margin-bottom: ${grid}px;\n    background-color: white;\n    padding: ${grid}px;\n  `;\n\n  const getListStyle = (isDraggingOver) => ({\n    background: isDraggingOver ? \"lavender\" : \"lightgrey\",\n    display: \"flex\",\n    padding: grid,\n    overflow: \"auto\"\n  });\n\n  function Quote({ slide, index }) {\n    return (\n      <Draggable draggableId={slide.id} index={index}>\n        {(provided) => (\n          <QuoteItem\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            {/*slide.id}_{slide.content}_{slide.text*/}\n            <img\n              className=\"img-responsive\"\n              src={slide.imgurl || slide.imagebase64 || \"images/img.jpg\"}\n              alt=\"\"\n            />\n          </QuoteItem>\n        )}\n      </Draggable>\n    );\n  }\n\n  const QuoteList = React.memo(function QuoteList({ slides }) {\n    return slides.map((slide, index) => (\n      <Quote slide={slide} index={index} key={slide.id} />\n    ));\n  });\n  /*const [state, setState] = useState({\n    time: initial.time,\n    slides: initial.slides\n  });\n\n  useEffect(() => {\n    console.log(\"state\", state);\n  }, [state]);*/\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const slides = reorder(\n      state.slides,\n      result.source.index,\n      result.destination.index\n    );\n\n    console.log(\" slides \", slides);\n\n    //setState({ ...state, slides: slides });\n    updateState({ ...state, slides: slides });\n  }\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\" direction=\"horizontal\">\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            <QuoteList slides={state.slides} />\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import React from \"react\";\n//import styled from \"styled-components\";\n//import css from \"styled-components\";\nimport styled from \"@emotion/styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//import { decrease, increase } from \"./counterSlice\";\nimport { setEn, setRu } from \"./redux/langSlice\";\n\nconst Switcher = styled.div`\n  display: flex;\n  margin: 0 7px;\n  margin-left: auto;\n`;\n\nconst Button = styled.div`\n  /* This renders the buttons above... Edit me! */\n  display: flex;\n  /*border-radius: 3px;\n  border: 2px solid white;\n  padding: 0.5rem 0;\n  margin: 0.5rem 1rem;\n  width: 6rem;\n  height: 3rem;*/\n  background: transparent;\n  background-color: #ffffff66;\n  &:hover {\n    background-color: #ffffffff;\n  }\n  transition: background-color 0.5s;\n  color: black;\n  margin: 2px;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-bottom: ${(props) =>\n    props.lang === props.curlang.toUpperCase() ? \"2px solid white;\" : \"\"};\n`;\n\nconst LangName = styled.div`\n  display: flex;\n  margin: 5px;\n  /*width: 3rem;*/\n  align-items: center;\n  justify-content: center;\n`;\nconst LangFlag = styled.div`\n  margin: 5px;\n  display: flex;\n  width: 30px;\n  height: 18px;\n  align-items: center;\n  justify-content: center;\n  background-size: 100% 100%;\n  background-image: ${(props) =>\n    props.lang === \"EN\"\n      ? \"url('images/flag_en.png')\"\n      : \"url('images/flag_ru.png')\"};\n`;\n\nexport function LangSwitch() {\n  //const count = useSelector((state) => state.counter.value);\n  const language = useSelector((state) => state.lang.value);\n  // in our slice, we provided the name property as 'counter'\n  // and the initialState with a 'value' property\n  // thus to read our data, we need useSelector to return the state.counter.value\n  const dispatch = useDispatch();\n  // gets the dispatch function to dispatch our actions\n\n  return (\n    <Switcher className=\"switchbggggg\">\n      <div className=\"d-flex\">\n        <Button\n          onClick={() => dispatch(setEn())}\n          lang={\"EN\"}\n          curlang={language}\n        >\n          <LangName>EN</LangName>\n          <LangFlag lang={\"EN\"} curlang={language} />\n        </Button>\n        {/*<p>{language}</p>\n      <button onClick={() => dispatch(setRu())}>RU</button>*/}\n        <Button\n          onClick={() => dispatch(setRu())}\n          lang={\"RU\"}\n          curlang={language}\n        >\n          <LangName>RU</LangName>\n          <LangFlag lang={\"RU\"} curlang={language} />\n        </Button>\n      </div>\n    </Switcher>\n  );\n}\n","export const LANG = {\n  editMode: { ru: \"Режим редактирования\", en: \"Edit mode\" },\n  developerMode: { ru: \"Режим разработчика\", en: \"Developer mode\" },\n  deleteThisSlide: { ru: \"Удалить этот слайд\", en: \"Delete this slide\" },\n  addNewSlide: { ru: \"Добавить новый слайд\", en: \"Delete this slide\" },\n  sorting: { ru: \"Сортировка\", en: \"Sorting\" },\n  dragBlocks: {\n    ru: \"Перетаскивайте блоки чтобы поменять порядок слайдов\",\n    en: \"Drag and drop blocks to change the order of slides\"\n  },\n  saveSlider: { ru: \"Сохранить слайдер\", en: \"Save slider\" },\n  saveSliderWithoutImages: {\n    ru: \"Сохранить слайдер без картинок\",\n    en: \"Save slider without images\"\n  },\n  sliderDefaultHeader: { ru: \"Заголовок\", en: \"Header\" },\n  sliderDefaultText: { ru: \"Текст слайдера\", en: \"Slider text\" }\n};\n","import React, { useState, useEffect, useRef } from \"react\"; //\nimport \"./styles.css\";\nimport \"./styles_add.css\";\nimport ReactDOM from \"react-dom\";\nimport { ReduxWrapper } from \"./redux/ReduxWrapper\";\n//import styled from \"@emotion/styled\";\nimport Html from \"./Html\";\nimport ImageUploader from \"./ImageUploader\";\nimport SortableList from \"./SortableList\";\nimport PrismCode from \"react-prism\";\nimport \"prismjs\";\nimport \"prismjs/components/prism-jsx.min\";\nimport \"prismjs/themes/prism-okaidia.css\";\nimport \"prismjs/components/prism-json\"; // need this\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { useUpdateEffect } from \"react-use\";\nimport { Switch, useCheckboxState } from \"pretty-checkbox-react\";\nimport \"@djthoms/pretty-checkbox\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport shortid from \"shortid\";\nimport { LangSwitch } from \"./LangSwitch\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LANG } from \"./languages\";\n\nconst sliderType = \"slider1\";\nconst uploadBase64ApiUrl = \"https://sp.imweb.ru/api/canvas/upload.php\";\n\nconst saveSliderApiUrl =\n  \"https://sp.imweb.ru/implant/sp/cosmoslider2022/templates/default/iframe/api/data/\";\nconst initSliderScriptUrl =\n  \"https://sp.imweb.ru/implant/sp/assets/sliderinit/sliderinit.js\";\nconst sliderIframeUrl = \"https://sp.imweb.ru/implant/sp/spslider/iframe/\";\nconst previewUrlBase =\n  \"https://sp.imweb.ru/implant/sp/spslider/preview.html?sliderid=\";\nconst initial = {\n  time: 3000,\n  slides: [\n    { text: \"Текст первого слайда\", id: \"id-1\", head: \"Заголовок 1\" },\n    { text: \"Текст второго слайда\", id: \"id-2\", head: \"Заголовок 2\" }\n  ]\n};\n\n/*function Slide({ slide, index, handleChange, handleImageChange }) {\n  return (\n    <div>\n      <textarea\n        type=\"text\"\n        id={slide.id}\n        name={slide.id}\n        onChange={handleChange}\n        value={slide.text}\n      >\n        {slide.text}\n      </textarea>\n\n      <img src={slide.image} alt={slide.id} />\n      <ImageUploader handleImageChange={handleImageChange} name={slide.id} />\n    </div>\n  );\n}*/\n\n//--------------------------------------------APPLICATION---------------\n\nfunction SliderApp() {\n  const editMode = useCheckboxState({ state: true });\n  const debugMode = useCheckboxState({ state: false });\n  const [imgUploadedNum, setImgUploadedNum] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isCoping, setIsCoping] = useState(false);\n  const [state, setState] = useState(initial);\n  const [finalSliderJSON, setFinalSliderJSON] = useState({});\n  const [resultSliderId, setResultSliderId] = useState(0);\n  const [previewUrl, setPreviewUrl] = useState(previewUrlBase);\n  const [resultCode, setResultCode] = useState(\"\");\n  const [slickSettings, setSlickSettings] = useState({\n    dots: false,\n    draggable: true,\n    arrows: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  });\n  const [redrawCounter, setRedrawCounter] = useState(0);\n  const [nav1, setNav1] = useState();\n  const [nav2, setNav2] = useState();\n  const language = useSelector((state) => state.lang.value);\n\n  useEffect(() => {\n    //console.log(\"state\", state);\n    const slidesNoImgData = state.slides.map((ob) => {\n      let nOb = {\n        id: ob.id,\n        text: ob.text,\n        head: ob.head,\n        image: ob.imageurl || \"\"\n      };\n      return nOb;\n    });\n    const finalOb = { data: { type: sliderType, slides: slidesNoImgData } };\n    setFinalSliderJSON(finalOb);\n  }, [state]);\n\n  useEffect(() => {\n    if (editMode.state) {\n      setSlickSettings((prevState) => ({\n        ...prevState,\n        dots: true,\n        draggable: false\n      }));\n    } else {\n      //console.log(\"ne---\", editMode.state);\n      setSlickSettings((prevState) => ({\n        ...prevState,\n        dots: true,\n        draggable: true\n      }));\n    }\n  }, [editMode.state]);\n\n  useUpdateEffect(() => {\n    //console.log(\"-ef-imgUploadedNum\", imgUploadedNum);\n    if (imgUploadedNum < state.slides.length && imgUploadedNum != 0) {\n      uploadBase64(state.slides[imgUploadedNum].imagebase64);\n    } else {\n      setIsUploading(true);\n      saveSlider();\n    }\n  }, [imgUploadedNum]);\n\n  function addSlide() {\n    const copy = [...state.slides];\n    const id = shortid.generate();\n    copy.push({ text: \"Текст\", id: id, head: \"Заголовок\" }); //id: \"id-\" + (copy.length + 1),\n    setState((prevState) => ({ ...prevState, slides: copy }));\n  }\n\n  const deleteSlide = (id) => {\n    //console.log(\"delete\", id);\n    setState((prevState) => ({\n      ...prevState,\n      slides: prevState.slides.filter((slide) => slide.id !== id)\n    }));\n    setRedrawCounter((prevState) => prevState + 1);\n  };\n\n  const handleChange = (event) => {\n    //console.log(\"event.target.name\", event.target.name);\n    const text = event.target.value;\n    const name = event.target.name;\n\n    setState((prevState) => ({\n      ...prevState,\n      slides: prevState.slides.map((el) =>\n        el.id === name ? { ...el, text } : el\n      )\n    }));\n  };\n\n  const handleChangeHead = (event) => {\n    //console.log(\"event.target.name\", event.target.name);\n    const head = event.target.value;\n    const name = event.target.name;\n\n    setState((prevState) => ({\n      ...prevState,\n      slides: prevState.slides.map((el) =>\n        el.id === name ? { ...el, head } : el\n      )\n    }));\n  };\n\n  const uploadBase64 = (image) => {\n    const details = {\n      sp: \"testslider\",\n      canvas: image\n    };\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key])\n      )\n      .join(\"&\");\n\n    fetch(uploadBase64ApiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      body: formBody\n    })\n      .then((res) => {\n        //console.log(\"res\", res);\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        setState((prevState) => ({\n          ...prevState,\n          slides: prevState.slides.map((el, index) =>\n            index === imgUploadedNum\n              ? {\n                  ...el,\n                  /*[\"imgname\"]: data.data.name,\n                  [\"imgfile\"]: data.data.file,\n                  [\"imageurl\"]: data.data.url*/\n                  imgname: data.data.name,\n                  imgfile: data.data.file,\n                  imageurl: data.data.url\n                }\n              : el\n          )\n        }));\n        setImgUploadedNum((prevNum) => prevNum + 1);\n      })\n      .catch((error) => {\n        console.log(\"catch\", error); // if wrong url in console we see: catch Error: 404      at eval (index.js:134)\n      });\n  };\n\n  const saveSlider = () => {\n    setIsSaving(true);\n    setIsUploading(false);\n    fetch(saveSliderApiUrl, {\n      method: \"POST\",\n      body: JSON.stringify(finalSliderJSON)\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        setImgUploadedNum(0);\n        setIsSaving(false);\n        setResultSliderId(data.response);\n        setResultCode(`\n        <script src=\"${initSliderScriptUrl}\"></script>\n        <iframe src=\"${sliderIframeUrl}\" scrolling=\"no\" style=\"width: 100%; height: 970px; border: 0px; overflow: hidden; \" class=\"spSlider\" data-sliderid=\"${data.response}\"></iframe>\n        `);\n        setPreviewUrl(previewUrlBase + data.response);\n        setIsCoping(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const copyResultToClipboard = () => {\n    document.addEventListener(\n      \"copy\",\n      function (e) {\n        e.clipboardData.setData(\"text/plain\", resultCode);\n        e.preventDefault();\n      },\n      true\n    );\n\n    document.execCommand(\"copy\");\n    setIsCoping(false);\n  };\n\n  const uploadImages = () => {\n    for (var i = 0; i < state.slides.length; i++) {\n      if (\n        !state.slides[i].imagebase64 ||\n        state.slides[i].imagebase64.indexOf(\"data\") === -1\n      ) {\n        alert(\"Изображение \" + (i + 1) + \" не загружено\");\n        return;\n      }\n    }\n    setIsUploading(true);\n    uploadBase64(state.slides[0].imagebase64);\n  };\n\n  const handleImageChange = (name, base64) => {\n    const imagebase64 = base64;\n    setState((prevState) => ({\n      ...prevState,\n      slides: prevState.slides.map((el) =>\n        el.id === name ? { ...el, imagebase64 } : el\n      )\n    }));\n  };\n\n  /*const loadSlider = (url) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setState((prevState) => ({\n          ...prevState,\n          slides: data.slides\n        }));\n      })\n      .catch((error) => {\n        console.log(\"er\", error);\n      });\n  };*/\n\n  const reset = () => {\n    setState(initial);\n    setRedrawCounter((prevState) => prevState + 1);\n  };\n\n  return (\n    <div className=\"mainWrapper\">\n      {(isUploading || isSaving || isCoping) && (\n        <div className=\"blocker\">\n          <div className=\"inblocker\">\n            {isUploading && (\n              <div className=\"waitinfo\">\n                Подождите, сохраняем.\n                <br />\n                Загружено изображений: {imgUploadedNum} из {state.slides.length}\n              </div>\n            )}\n            {isSaving && <div className=\"waitinfo\">Сохранение данных</div>}\n            {isCoping && (\n              <div className=\"waitinfo resultcode\">\n                <div>\n                  Слайдер сохранен. Предпросмотр по&nbsp;\n                  <a href={previewUrl} target=\"_blank\" rel=\"noreferrer\">\n                    ссылке\n                  </a>\n                  .\n                </div>\n                <button\n                  className=\"devutil closeresult\"\n                  onClick={() => setIsCoping(false)}\n                >\n                  ✖\n                </button>\n                <div>Или сразу скопируйте код:</div>\n                <div className=\"codetocopy\">{resultCode}</div>\n                <button className=\"devutil\" onClick={copyResultToClipboard}>\n                  Скопировать код\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <div className=\"topnav\">\n        <div className=\"switchbg\">\n          <Switch {...editMode}>{LANG.editMode[language]}</Switch>\n        </div>\n        <div className=\"switchbg\">\n          <Switch {...debugMode}>{LANG.developerMode[language]}</Switch>\n        </div>\n\n        <button className=\"devutil\" onClick={reset}>\n          Reset\n        </button>\n        <LangSwitch />\n      </div>\n      <div className=\"vspace\"></div>\n      <div className=\"implantWrapper\">\n        <div className=\"sliderbox\">\n          <Slider\n            {...slickSettings}\n            key={\"slick\" + redrawCounter}\n            asNavFor={nav2}\n            ref={(slider1) => setNav1(slider1)}\n          >\n            {state.slides.map((slide, index) => (\n              <div className=\"sliderbox-content\" key={\"slc\" + index}>\n                <div className=\"sliderbox-content_img\">\n                  <img\n                    className=\"img-responsive\"\n                    src={\n                      editMode.state\n                        ? slide.imagebase64 || \"images/img.jpg\"\n                        : slide.imgurl || \"images/img.jpg\"\n                    }\n                    alt=\"\"\n                  />\n                  {editMode.state && (\n                    <>\n                      <ImageUploader\n                        className=\"imginput\"\n                        handleImageChange={handleImageChange}\n                        name={slide.id}\n                      />\n                      <button\n                        className=\"devutil delete_slide\"\n                        onClick={() => deleteSlide(slide.id)}\n                      >\n                        {LANG.deleteThisSlide[language]}\n                      </button>\n                    </>\n                  )}\n                  {debugMode.state && (\n                    <div className=\"slide_id\">{slide.id}</div>\n                  )}\n                </div>\n                <div className=\"sliderbox-content_dotspace\"></div>\n              </div>\n            ))}\n          </Slider>\n\n          <Slider\n            {...slickSettings}\n            key={\"secondslick\" + redrawCounter}\n            asNavFor={nav1}\n            dots={false}\n            arrows={false}\n            ref={(slider2) => setNav2(slider2)}\n          >\n            {state.slides.map((slide, index) => (\n              <div className=\"sliderbox-content\" key={\"secondslc\" + index}>\n                {editMode.state ? (\n                  <TextareaAutosize\n                    className=\"sliderbox-content_head sliderbox-content_head_textarea\"\n                    type=\"text\"\n                    id={slide.id}\n                    name={slide.id}\n                    onChange={handleChangeHead}\n                    value={slide.head}\n                  ></TextareaAutosize>\n                ) : (\n                  <div className=\"sliderbox-content_head\">{slide.head}</div>\n                )}\n\n                {editMode.state ? (\n                  <TextareaAutosize\n                    className=\"sliderbox-content_about sliderbox-content_about_textarea\"\n                    type=\"text\"\n                    id={slide.id}\n                    name={slide.id}\n                    onChange={handleChange}\n                    value={slide.text}\n                  ></TextareaAutosize>\n                ) : (\n                  <div className=\"sliderbox-content_about\">\n                    <Html>{slide.text}</Html>\n                  </div>\n                )}\n              </div>\n            ))}\n          </Slider>\n        </div>\n        {editMode.state && (\n          <>\n            <button className=\"devutil addslide\" onClick={addSlide}>\n              <span className=\"plus_add\">+&nbsp;</span>\n              {LANG.addNewSlide[language]}\n            </button>\n            <div className=\"sortbg\">\n              <h3 className=\"devutil sorthead\">{LANG.sorting[language]}</h3>\n              <div className=\"devutil\">{LANG.dragBlocks[language]}</div>\n              <SortableList\n                updateState={setState}\n                initial={initial}\n                state={state}\n              />\n            </div>\n            <div className=\"saveCont\">\n              <button className=\"devutil save_slider\" onClick={uploadImages}>\n                {LANG.saveSlider[language]}\n              </button>\n              {debugMode.state && (\n                <button className=\"devutil save_slider\" onClick={saveSlider}>\n                  {LANG.saveSliderWithoutImages[language]}\n                </button>\n              )}\n            </div>\n          </>\n        )}\n\n        {debugMode.state && (\n          <>\n            <h3 className=\"devutil\">slider array</h3>\n            <div className=\"prismcode\">\n              <PrismCode className=\"language-javascript\">\n                {JSON.stringify(state.slides)}\n              </PrismCode>\n            </div>\n            <h3 className=\"devutil\">final json</h3>\n            <div className=\"prismcode\">\n              <PrismCode className=\"language-javascript\">\n                {JSON.stringify(finalSliderJSON)}\n              </PrismCode>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <ReduxWrapper>\n    <SliderApp />\n  </ReduxWrapper>,\n  rootElement\n);\n"],"sourceRoot":""}